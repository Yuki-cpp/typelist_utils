name: Build and Test Package
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yuki-cpp/ubuntu_20_04:clang-13
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      
      - name: Build and test
        run: |
          conan create $GITHUB_WORKSPACE yuki/devel -pr:h $GITHUB_WORKSPACE/conan/clang_profile -pr:b $GITHUB_WORKSPACE/conan/clang_profile

  SonarCheck:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/yuki-cpp/ubuntu_20_04:clang-13
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Build and test
        run: |
          mkdir build
          cmake -S $GITHUB_WORKSPACE -B build -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON
          sonar-build-wrapper --out-dir sonar_out cmake --build build/
          ls -R sonar_out
          ls -R ./build
          llvm-profdata-13 merge -sparse ./build/bin/default.profraw -o ./build/bin/default.profdata
          llvm-cov-13 show ./build/bin/typelist_utils -instr-profile=./build/bin/default.profdata > ./coverage.txt


      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="https://sonarcloud.io" --define sonar.cfamily.build-wrapper-output="sonar_out"